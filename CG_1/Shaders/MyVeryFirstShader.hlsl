// ¬ходна€ структура вершины (VS_IN)
// pos : POSITION0 Ч позици€ вершины.
// col : COLOR0 Ч цвет вершины.
struct VS_IN
{
	// : POSITION0 Ч семантика (semantic), котора€ указывает назначение этого параметра.
	// —емантики используютс€ дл€ св€зи данных между шейдерными стади€ми (например, между вершинным и пиксельным шейдерами). 
	// ќни говор€т GPU, какую информацию содержит данное поле.
	// POSITION	- ѕозици€ вершины (обычно в локальных координатах).
    // SV_POSITION - ѕозици€ в экранных координатах (после трансформации).
    // COLOR - ÷вет вершины илипиксел€.
    // TEXCOORD - “екстурные координаты.
    // NORMAL - Ќормаль вершины (используетс€ дл€освещени€).
	float4 pos : POSITION0;
	float4 col : COLOR0;
};

// ¬ыходна€ структура вершины (PS_IN)
// pos : SV_POSITION Ч позици€ вершины после преобразовани€ (используетс€ дл€ растеризации).
// col : COLOR Ч цвет вершины, передаваемый в пиксельный шейдер.
struct PS_IN
{
	float4 pos : SV_POSITION;
 	float4 col : COLOR;
};

// ¬ершинный шейдер
// Ётот шейдер просто копирует входные данные (pos и col) в выходную структуру PS_IN. 
// “о есть, он не выполн€ет никаких трансформаций, а просто передаЄт данные в пиксельный шейдер.
PS_IN VSMain( VS_IN input )
{
	// (PS_IN)0 Ч это €вное приведение (каст) нул€ к типу PS_IN.
	PS_IN output = (PS_IN)0;
	
	output.pos = input.pos;
	output.col = input.col;
	
	return output;
}

// ѕиксельный шейдер
// col берЄтс€ из input.col (цвет, переданный из вершинного шейдера).
// ≈сли активирован макрос TEST, то выполн€етс€ проверка:
// Ёто означает, что если x-координата пиксел€ больше 400, то цвет замен€етс€ на TCOLOR. 
// Ётот параметр должен быть определЄн где-то выше в коде.
float4 PSMain( PS_IN input ) : SV_Target
{
	float4 col = input.col;
#ifdef TEST
	if (input.pos.x > 400) col = TCOLOR;
#endif
	return col;
}